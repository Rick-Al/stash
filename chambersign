-- Configuration
local imagePath = "chambers/test.nfp"
local inputSide = "top"
local monitor = peripheral.find("monitor")

-- Initial setup
monitor.setTextScale(1)
local showingImage = false
local previousState = false

-- Helper functions
local function showImage()
    local originalTerm = term.redirect(monitor)
    term.clear()
    term.setCursorPos(1, 1)
    if fs.exists(imagePath) then
        local img = paintutils.loadImage(imagePath)
        paintutils.drawImage(img, 1, 1)
    else
        print("Image not found!")
    end
    term.redirect(originalTerm)
end

local function clearMonitor()
    local originalTerm = term.redirect(monitor)
    monitor.setBackgroundColor(colors.black)
    term.clear()
    term.setCursorPos(1, 1)
    term.redirect(originalTerm)
end

local function flickerImage(times, delay)
    for i = 1, times do
        showImage()
        sleep(delay)
        clearMonitor()
        sleep(delay)
    end
end

-- Main loop
while true do
    local currentState = redstone.getInput(inputSide)

    -- Rising edge detection (pulse)
    if currentState and not previousState then
        showingImage = not showingImage

        if showingImage then
            flickerImage(2, 0.2) -- Flicker twice with 0.2s delay
            showImage()
        else
            clearMonitor()
        end
    end

    previousState = currentState
    sleep(0.05)
end
